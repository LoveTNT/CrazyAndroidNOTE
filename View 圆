package com.example.testdemo;

import java.security.PublicKey;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.View;

public class CustomView extends View implements Runnable {

	private Paint mPaint;
    private int radiu;// 圆环半径  
    private Context mContext;// 上下文环境引用  


	public CustomView(Context context) {
		super(context);
	}

	public CustomView(Context context, AttributeSet attrs) {
		super(context, attrs);
        mContext = context;  

		// 初始画笔
		initPaint();
	}

	private void initPaint() {
		mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);

		mPaint.setStyle(Paint.Style.STROKE);
		mPaint.setColor(Color.LTGRAY);
		mPaint.setStrokeWidth(10);

	}

	@Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);

		canvas.drawCircle(100, 100, radiu, mPaint);
		
	}
	  public synchronized void setRadiu(int radiu) {  
	        this.radiu = radiu;  
	        //c_hui
	        invalidate();

		}

	  @Override  
	    public void run() {  
	        /* 
	         * 确保线程不断执行不断刷新界面 
	         */  
	        while (true) {  
	            try {  
	                /* 
	                 * 如果半径小于200则自加否则大于200后重置半径值以实现往复 
	                 */  
	                if (radiu <= 200) {  
	                    radiu += 10;  
	  
	                    // 刷新View  
//	                    invalidate();  UI线程跟新
	                    postInvalidate(); //子线程更新
	                } else {  
	                    radiu = 0;  
	                }  
	  
	                // 每执行一次暂停40毫秒  
	                Thread.sleep(40);  
	            } catch (InterruptedException e) {  
	                e.printStackTrace();  
	            }  
	        }  
	    }  

}





package com.example.testdemo;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.LinearLayout;

public class MainActivity extends Activity {
    private CustomView mCustomView;// 我们的自定义View  

	private LinearLayout LL;
    private int radiu;// 半径值  
    
    private Handler mhandler=new Handler(){
    	public void handleMessage(android.os.Message msg) {
    		mCustomView.setRadiu(radiu);
    	}
    };

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.lin);
		
//		LL = (LinearLayout) findViewById(R.id.root_lin);
//		LL.addView(new CustomView(this));
    
		mCustomView = (CustomView) findViewById(R.id.main_view);
	    
		new Thread(mCustomView).start();
	}
 
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
	
		super.onDestroy();
		mhandler.removeCallbacksAndMessages(null);
	}
}


